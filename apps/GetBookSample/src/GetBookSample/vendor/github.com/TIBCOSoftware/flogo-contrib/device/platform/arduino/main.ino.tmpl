#include <SPI.h>
{{if .MqttEnabled}}#include <WiFi101.h>
#include <PubSubClient.h>

WiFiClient wifiClient;
PubSubClient client(wifiClient);

{{end}}

void setup() {
    Serial.begin(115200);

    while (!Serial) {
        delay(10);
    }

    {{if .MqttEnabled}}
    setup_wifi();
    setup_mqtt();
    {{end}}

	//init triggers
	{{range .Triggers}}t_{{.}}_init();
	{{end}}

	//init actions
	{{range .Actions}}a_{{.}}_init();
	{{end}}
}

{{if .MqttEnabled}}
void init_mqtt_triggers() {
  //init mqtt triggers
  {{ range $name, $topic := .MqttTriggers }}t_{{$name}}_init();
  {{end}}
}{{end}}

void loop() {
    {{if .MqttEnabled}}
    if (!client.connected()) {
        mqtt_reconnect();
    }

    // MQTT client loop processing
    client.loop();
    {{end}}

	//triggers
	{{range .Triggers}}t_{{.}}();
	{{end}}
}

{{if .MqttEnabled}}
void callback(char *topic, byte *payload, unsigned int length) {

    Serial.print("Message arrived [");
    Serial.print(topic);
    Serial.print("] ");
    for (int i=0; i < length; i++) {
        Serial.print((char) payload[i]);
    }
    Serial.println();

	//mqtt triggers
	{{ range $name, $topic := .MqttTriggers }}
    if (strcmp(topic,"{{$topic}}") == 0) {
	  t_{{$name}}(topic, payload, length);
	}{{end}}
}
{{end}}